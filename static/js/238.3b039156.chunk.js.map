{"version":3,"file":"static/js/238.3b039156.chunk.js","mappings":"gRAEaA,EAAQC,EAAAA,EAAAA,MAAH,6FAKLC,EAAOD,EAAAA,EAAAA,KAAH,wFAMJE,EAAQF,EAAAA,EAAAA,MAAH,+M,SCsBlB,EA/BkB,SAAC,GAAD,IAChBG,EADgB,EAChBA,UACAC,EAFgB,EAEhBA,KACAC,EAHgB,EAGhBA,KACAC,EAJgB,EAIhBA,MACAC,EALgB,EAKhBA,QACAC,EANgB,EAMhBA,aACAC,EAPgB,EAOhBA,MAPgB,OAShB,UAACV,EAAD,YACE,SAACE,EAAD,UAAOE,KACP,SAACD,EAAD,CACEE,KAAMA,EACNC,KAAMA,EACNE,QAASA,EACTD,MAAOA,EACPG,MAAOA,EACPC,SAAUF,EACVG,UAAQ,MAlBI,ECJLC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACnBC,EAAY,SAAAF,GAAK,OAAIA,EAAMC,SAASE,MAAnB,EACjBC,EAAmB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,aAAnB,ECAxBC,EAAOnB,EAAAA,EAAAA,KAAH,6GCAJoB,EAASpB,EAAAA,EAAAA,OAAH,gMAYNqB,EAAKrB,EAAAA,EAAAA,GAAH,6LAWFsB,EAAKtB,EAAAA,EAAAA,GAAH,uGC+Cf,EA7DsB,SAAC,GAAwB,IAAtBuB,EAAqB,EAArBA,eACjBL,GAAgBM,EAAAA,EAAAA,IAAYP,GAClC,GAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOpB,EAAP,KAAaqB,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAYMpB,EAAe,SAAAqB,GACK,SAApBA,EAAIC,OAAOzB,KACbqB,EAAQG,EAAIC,OAAOrB,OAEnBmB,EAASC,EAAIC,OAAOrB,MAEvB,EAMD,OALAsB,EAAAA,EAAAA,YAAU,WACRb,GAAiBQ,EAAQR,EAAcb,MACvCa,GAAiBU,EAASV,EAAcc,OACzC,GAAE,CAACd,KAGF,UAACC,EAAD,CAAMc,SAnBa,SAAAC,GACnBA,EAAEC,iBACFZ,EAAe,CAAElB,KAAAA,EAAM2B,OAAQL,IAL/BD,EAAQ,IACRE,EAAS,GAMV,EAeC,WACE,SAAC,EAAD,CACExB,KAAK,OACLC,KAAK,OACLC,MAAM,yIACNC,QAAQ,yHACRJ,UAAU,OACViC,aAAa,MACb3B,MAAOJ,EACPG,aAAcA,KAEhB,SAAC,EAAD,CACEJ,KAAK,MACLC,KAAK,QACLC,MAAM,8FACNC,QAAQ,yFACRJ,UAAU,QACViC,aAAa,KACb3B,MAAOkB,EACPnB,aAAcA,IAEfU,GACC,SAACE,EAAD,CAAQhB,KAAK,SAAb,2BAEA,SAACgB,EAAD,CAAQhB,KAAK,SAAb,2BAIP,ECrBD,EA1CqB,SAAC,GAA8C,IAA5CU,EAA2C,EAA3CA,SAAUuB,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAC/C,OAAKxB,EAASyB,QAIZ,+BACE,SAAClB,EAAD,UACGP,EAAS0B,KAAI,SAAAC,GAAO,OACnB,UAACnB,EAAD,WACGmB,EAAQpC,KADX,KACiB,0BAAOoC,EAAQT,UAC9B,iBACEU,MAAO,CACLC,QAAQ,OACRC,IAAK,QAHT,WAME,SAACxB,EAAD,CAAQhB,KAAK,SAASyC,QAAS,kBAAMR,EAAcI,EAAQK,GAA5B,EAA/B,qBAGA,SAAC1B,EAAD,CAAQhB,KAAK,SAASyC,QAAS,kBAAMP,EAAYG,EAAQK,GAA1B,EAA/B,uBAXKL,EAAQK,GADE,SALlB,sCA0BV,EC9BYC,EAAgB/C,EAAAA,EAAAA,QAAH,mNAUbgD,EAAehD,EAAAA,EAAAA,GAAH,kKCMzB,EAdgB,SAAC,GAAyB,IAAvBM,EAAsB,EAAtBA,MAAO2C,EAAe,EAAfA,SACxB,OACE,UAACF,EAAD,YACE,SAACC,EAAD,UAAe1C,IACd2C,IAGN,ECUD,EAjBoB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACjC,OACE,UAACpD,EAAD,YACE,SAACE,EAAD,UAAOiD,KACP,SAAChD,EAAD,CACEE,KAAK,OACLgD,YAAY,iBACZ1C,SAAU,SAAAwB,GAAC,OAAIiB,EAAajB,EAAEJ,OAAOrB,MAA1B,MAIlB,E,6BCbY4C,EAAS,kBACpB,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GANS,E,8BCETC,EAAW3D,EAAAA,GAAAA,IAAH,4GAOR4D,EAAY5D,EAAAA,GAAAA,KAAH,6FACG6D,GAIZC,EAAY9D,EAAAA,GAAAA,IAAH,uDCgFtB,EAvEiB,WACf,IAAMkB,GAAgBM,EAAAA,EAAAA,IAAYP,GAElC,GAA8CO,EAAAA,EAAAA,IAAYZ,GAA3CE,EAAf,EAAQiD,MAAiBC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,MAC5BC,GAAW1C,EAAAA,EAAAA,IAAY2C,EAAAA,GAAvBD,OACJlD,GAASQ,EAAAA,EAAAA,IAAYT,GACnBqD,GAAWC,EAAAA,EAAAA,OAEjBtC,EAAAA,EAAAA,YAAU,WACRqC,GAASE,EAAAA,EAAAA,MACV,GAAE,CAACF,IA4BJ,OACE,SAACR,EAAD,UAEGM,IACC,UAACJ,EAAD,YAGE,SAAC,EAAD,CAASxD,MAAM,YAAf,UACE,SAAC,EAAD,CAAeiB,eAlCF,SAAAgD,GACrB,IACGrD,GACDJ,EAAS0D,MAAK,SAAA/B,GAAO,OAAIA,EAAQpC,OAASkE,EAAKlE,IAA1B,IAErB,OAAOoE,MAAM,GAAD,OAAIF,EAAKlE,KAAT,8BAEba,GAAiBkD,GAASM,EAAAA,EAAAA,IAAWH,IACtCrD,GAAiBkD,GAASO,EAAAA,EAAAA,KAAc,QAAE7B,GAAI5B,EAAc4B,IAAOyB,IACpE,OA4BO,UAAC,EAAD,CAASjE,MAAM,WAAf,WACE,SAAC,EAAD,CACE4C,WAAW,wBACXC,aA7Ba,SAAA1C,GACvB,IAAMJ,EAAOI,EAAMmE,OAAOC,oBACrBxE,IACHW,EAAS,IAEXA,EAASF,EAASE,QAAO,SAAA8D,GAAE,OAAIA,EAAGzE,KAAKwE,oBAAoBE,SAAS1E,EAAzC,IAC3B+D,GAASY,EAAAA,EAAAA,IAAWhE,GACrB,KAwBS,SAAC2C,EAAD,UAEGK,IAAa,SAACX,EAAD,OAEhB,uBAAIY,KACJ,SAAC,EAAD,CACE5B,cA7BU,SAAAS,GACpBsB,GAASa,EAAAA,EAAAA,IAAcnC,GACxB,EA4BWR,YA3BQ,SAAAQ,GAClB,IAAML,EAAU3B,EAASoE,MAAK,SAAAJ,GAAE,OAAIA,EAAGhC,KAAOA,CAAd,IAChCsB,GAASe,EAAAA,EAAAA,IAAY1C,GACtB,EAyBW3B,SAAqB,KAAXE,EAAgBF,EAAWE,WAOlD,C","sources":["components/UI/InputName/InputName.styled.jsx","components/UI/InputName/InputName.jsx","redux/contacts/contactsSelectors.js","components/PhoneBookForm/PhoneBookForm.styled.jsx","components/ContactsList/ContactList.styled.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/ContactsList/ContactsList.jsx","components/UI/Section/Section.styled.jsx","components/UI/Section/Section.jsx","components/UI/InputSearch/InputSearch.jsx","components/UI/Loader/Loader.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  display: block;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  background-color: #FFC0CB;\n  color: black;\n  display: block;\n  width: 300px;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Label, Span, Input } from '../InputName/InputName.styled';\n\nconst InputName = ({\n  mainTitle,\n  type,\n  name,\n  title,\n  pattern,\n  handleChange,\n  value,\n}) => (\n  <Label>\n    <Span>{mainTitle}</Span>\n    <Input\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      value={value}\n      onChange={handleChange}\n      required\n    />\n  </Label>\n);\nInputName.propTypes = {\n  mainTitle: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default InputName;\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\nexport const getEditedContact = state => state.contacts.editedContact;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 500px;\n  margin-right: auto;\n  margin-left: auto;\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 5px;\n  background-color: #7b68ee;\n  font-size: 15px;\n  border-radius: 4px;\n  color: black;\n  font-weight: bold;\n\n  &:hover {\n    color: white;\n  }\n`;\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  flex-grow: 1;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  height: 280px;\n  overflow: scroll;\n`;\nexport const Li = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\n\nimport InputName from '../UI/InputName/InputName';\nimport { getEditedContact } from 'redux/contacts/contactsSelectors';\n\nimport { Form } from '../PhoneBookForm/PhoneBookForm.styled';\nimport { Button } from 'components/ContactsList/ContactList.styled';\n\nconst PhoneBookForm = ({ onInputContact }) => {\n  const editedContact = useSelector(getEditedContact);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onInputContact({ name, number: phone });\n    reset();\n  };\n\n  const handleChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else {\n      setPhone(evt.target.value);\n    }\n  };\n  useEffect(() => {\n    editedContact && setName(editedContact.name);\n    editedContact && setPhone(editedContact.number);\n  }, [editedContact]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputName\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        mainTitle=\"Name\"\n        defaultValue=\"Bob\"\n        value={name}\n        handleChange={handleChange}\n      />\n      <InputName\n        type=\"tel\"\n        name=\"phone\"\n        title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        mainTitle=\"Phone\"\n        defaultValue=\"+1\"\n        value={phone}\n        handleChange={handleChange}\n      />\n      {editedContact ? (\n        <Button type=\"submit\">Edit Contact</Button>\n      ) : (\n        <Button type=\"submit\">Add Contact</Button>\n      )}\n    </Form>\n  );\n};\n\nPhoneBookForm.propTypes = {\n  onInputContact: PropTypes.func.isRequired,\n};\nexport default PhoneBookForm;\n","import PropTypes from 'prop-types';\n\nimport { Button, Ul, Li } from './ContactList.styled';\n\nconst ContactsList = ({ contacts, onClickDelete, onClickEdit }) => {\n  if (!contacts.length) {\n    return <p>No any data</p>;\n  }\n  return (\n    <>\n      <Ul>\n        {contacts.map(contact => (\n          <Li key={contact.id}>\n            {contact.name}:<span>{contact.number}</span>\n            <div\n              style={{\n                display: `flex`,\n                gap: '10px',\n              }}\n            >\n              <Button type=\"button\" onClick={() => onClickDelete(contact.id)}>\n                Delete\n              </Button>\n              <Button type=\"button\" onClick={() => onClickEdit(contact.id)}>\n                Edit\n              </Button>\n            </div>\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  position: relative;\n  width: 600px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 10px;\n  border-radius: 20px;\n  border: 5px solid #364448;\n  background-color: #dfdbe5;\n`;\nexport const TitleSection = styled.h1`\n  width: fit-content;\n  margin: 0 auto 20px;\n\n  color: white;\n  background-color: #364448;\n  border-radius: 15px;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionStyled, TitleSection } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <TitleSection>{title}</TitleSection>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport { Label, Input, Span } from '../InputName/InputName.styled';\n\nconst InputSearch = ({ nameSearch, onSearchName }) => {\n  return (\n    <Label>\n      <Span>{nameSearch}</Span>\n      <Input\n        type=\"text\"\n        placeholder=\"Search by name\"\n        onChange={e => onSearchName(e.target.value)}\n      ></Input>\n    </Label>\n  );\n};\n\nInputSearch.propTypes = {\n  nameSearch: PropTypes.string.isRequired,\n  onSearchName: PropTypes.func.isRequired,\n};\nexport default InputSearch;\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <RotatingLines\n    strokeColor=\"pink\"\n    strokeWidth=\"5\"\n    animationDuration=\"0.75\"\n    width=\"96\"\n    visible={true}\n  />\n);\n","import styled from 'styled-components';\n\nimport cool from '../../assets/backgroundImage.jpg';\n\nexport const TitleDiv = styled.div`\nwidth: fit-content;\nmargin:  0 auto;\nposition: absolute;\ntop: 10px;\nright: 10px;`;\n\nexport const MainStyle = styled.main`\nbackground-image: url('${cool}');\nbackground-size: cover;\nheight: 100% ;`;\n\nexport const DivIsAuth = styled.div`\ndisplay: flex;\npadding: 100px;`;\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PhoneBookForm from 'components/PhoneBookForm/PhoneBookForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Section from 'components/UI/Section/Section';\nimport InputSearch from 'components/UI/InputSearch/InputSearch';\nimport {\n  getContacts,\n  getEditedContact,\n  getFilter,\n} from 'redux/contacts/contactsSelectors';\nimport { getAuth } from 'redux/auth/selectorsAuth';\n\nimport {\n  fetchTasks,\n  deleteContact,\n  addContact,\n  updateContact,\n} from 'redux/contacts/contactsThunk';\nimport { Loader } from 'components/UI/Loader/Loader';\nimport { editContact, findByName } from 'redux/contacts/contactsSlice';\n\nimport {TitleDiv, MainStyle, DivIsAuth} from './Home.styled'\n\nconst HomePage = () => {\n  const editedContact = useSelector(getEditedContact);\n\n  const { items: contacts, isLoading, error } = useSelector(getContacts);\n  const { isAuth } = useSelector(getAuth);\n  let filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const onInputContact = user => {\n    if (\n      !editedContact &&\n      contacts.some(contact => contact.name === user.name)\n    ) {\n      return alert(`${user.name} is already in contacts.`);\n    }\n    !editedContact && dispatch(addContact(user));\n    editedContact && dispatch(updateContact({ id: editedContact.id, ...user }));\n  };\n\n  const findByNameFilter = value => {\n    const name = value.trim().toLocaleLowerCase();\n    if (!name) {\n      filter = '';\n    }\n    filter = contacts.filter(el => el.name.toLocaleLowerCase().includes(name));\n    dispatch(findByName(filter));\n  };\n  const onClickDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  const onClickEdit = id => {\n    const contact = contacts.find(el => el.id === id);\n    dispatch(editContact(contact));\n  };\n  return (\n    <MainStyle\n    >\n      {isAuth && (\n        <DivIsAuth\n\n        >\n          <Section title=\"PhoneBook\">\n            <PhoneBookForm onInputContact={onInputContact} />\n          </Section>\n\n          <Section title=\"Contacts\">\n            <InputSearch\n              nameSearch=\"Find contacts by name\"\n              onSearchName={findByNameFilter}\n            />\n            <TitleDiv\n            >\n              {isLoading && <Loader />}\n            </TitleDiv>\n            <p>{error}</p>\n            <ContactsList\n              onClickDelete={onClickDelete}\n              onClickEdit={onClickEdit}\n              contacts={filter === '' ? contacts : filter}\n            />\n          </Section>\n        </DivIsAuth>\n      )}\n    </MainStyle>\n  );\n};\n\nexport default HomePage;"],"names":["Label","styled","Span","Input","mainTitle","type","name","title","pattern","handleChange","value","onChange","required","getContacts","state","contacts","getFilter","filter","getEditedContact","editedContact","Form","Button","Ul","Li","onInputContact","useSelector","useState","setName","phone","setPhone","evt","target","useEffect","number","onSubmit","e","preventDefault","defaultValue","onClickDelete","onClickEdit","length","map","contact","style","display","gap","onClick","id","SectionStyled","TitleSection","children","nameSearch","onSearchName","placeholder","Loader","strokeColor","strokeWidth","animationDuration","width","visible","TitleDiv","MainStyle","cool","DivIsAuth","items","isLoading","error","isAuth","getAuth","dispatch","useDispatch","fetchTasks","user","some","alert","addContact","updateContact","trim","toLocaleLowerCase","el","includes","findByName","deleteContact","find","editContact"],"sourceRoot":""}